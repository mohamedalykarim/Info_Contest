// Generated by Dagger (https://dagger.dev).
package mohalim.alarm.infocontest.core.service;

import android.content.Context;
import androidx.work.WorkerParameters;
import dagger.internal.DaggerGenerated;
import javax.inject.Provider;
import mohalim.alarm.infocontest.core.data_source.room.QuestionDao;
import mohalim.alarm.infocontest.core.model.question.QuestionCacheMapper;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RetreiveQuestionWorkManager_Factory {
  private final Provider<QuestionDao> questionDaoProvider;

  private final Provider<QuestionCacheMapper> questionCacheMapperProvider;

  public RetreiveQuestionWorkManager_Factory(Provider<QuestionDao> questionDaoProvider,
      Provider<QuestionCacheMapper> questionCacheMapperProvider) {
    this.questionDaoProvider = questionDaoProvider;
    this.questionCacheMapperProvider = questionCacheMapperProvider;
  }

  public RetreiveQuestionWorkManager get(Context appContext, WorkerParameters workerParameters) {
    return newInstance(appContext, workerParameters, questionDaoProvider.get(), questionCacheMapperProvider.get());
  }

  public static RetreiveQuestionWorkManager_Factory create(
      Provider<QuestionDao> questionDaoProvider,
      Provider<QuestionCacheMapper> questionCacheMapperProvider) {
    return new RetreiveQuestionWorkManager_Factory(questionDaoProvider, questionCacheMapperProvider);
  }

  public static RetreiveQuestionWorkManager newInstance(Context appContext,
      WorkerParameters workerParameters, QuestionDao questionDao,
      QuestionCacheMapper questionCacheMapper) {
    return new RetreiveQuestionWorkManager(appContext, workerParameters, questionDao, questionCacheMapper);
  }
}
