// Generated by Dagger (https://dagger.dev).
package mohalim.contest.alarm.core.di.modules;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import mohalim.alarm.infocontest.core.data_source.room.AppCacheDatabase;
import mohalim.alarm.infocontest.core.data_source.room.QuestionDao;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CahcheDatabaseModule_ProvideQuestionDaoFactory implements Factory<QuestionDao> {
  private final CahcheDatabaseModule module;

  private final Provider<AppCacheDatabase> appCacheDatabaseProvider;

  public CahcheDatabaseModule_ProvideQuestionDaoFactory(CahcheDatabaseModule module,
      Provider<AppCacheDatabase> appCacheDatabaseProvider) {
    this.module = module;
    this.appCacheDatabaseProvider = appCacheDatabaseProvider;
  }

  @Override
  public QuestionDao get() {
    return provideQuestionDao(module, appCacheDatabaseProvider.get());
  }

  public static CahcheDatabaseModule_ProvideQuestionDaoFactory create(CahcheDatabaseModule module,
      Provider<AppCacheDatabase> appCacheDatabaseProvider) {
    return new CahcheDatabaseModule_ProvideQuestionDaoFactory(module, appCacheDatabaseProvider);
  }

  public static QuestionDao provideQuestionDao(CahcheDatabaseModule instance,
      AppCacheDatabase appCacheDatabase) {
    return Preconditions.checkNotNullFromProvides(instance.provideQuestionDao(appCacheDatabase));
  }
}
