// Generated by Dagger (https://dagger.dev).
package mohalim.contest.alarm.core.repository;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;
import mohalim.alarm.infocontest.core.data_source.room.QuestionDao;
import mohalim.alarm.infocontest.core.model.question.QuestionCacheMapper;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class QuestionRepositoryImp_Factory implements Factory<QuestionRepositoryImp> {
  private final Provider<QuestionDao> questionDaoProvider;

  private final Provider<QuestionCacheMapper> questionCacheMapperProvider;

  public QuestionRepositoryImp_Factory(Provider<QuestionDao> questionDaoProvider,
      Provider<QuestionCacheMapper> questionCacheMapperProvider) {
    this.questionDaoProvider = questionDaoProvider;
    this.questionCacheMapperProvider = questionCacheMapperProvider;
  }

  @Override
  public QuestionRepositoryImp get() {
    return newInstance(questionDaoProvider.get(), questionCacheMapperProvider.get());
  }

  public static QuestionRepositoryImp_Factory create(Provider<QuestionDao> questionDaoProvider,
      Provider<QuestionCacheMapper> questionCacheMapperProvider) {
    return new QuestionRepositoryImp_Factory(questionDaoProvider, questionCacheMapperProvider);
  }

  public static QuestionRepositoryImp newInstance(QuestionDao questionDao,
      QuestionCacheMapper questionCacheMapper) {
    return new QuestionRepositoryImp(questionDao, questionCacheMapper);
  }
}
