// Generated by Dagger (https://dagger.dev).
package mohalim.contest.alarm.core.di.modules;

import android.content.Context;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import mohalim.alarm.infocontest.core.data_source.room.AppCacheDatabase;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CahcheDatabaseModule_ProvideAppDatabaseFactory implements Factory<AppCacheDatabase> {
  private final CahcheDatabaseModule module;

  private final Provider<Context> contextProvider;

  public CahcheDatabaseModule_ProvideAppDatabaseFactory(CahcheDatabaseModule module,
      Provider<Context> contextProvider) {
    this.module = module;
    this.contextProvider = contextProvider;
  }

  @Override
  public AppCacheDatabase get() {
    return provideAppDatabase(module, contextProvider.get());
  }

  public static CahcheDatabaseModule_ProvideAppDatabaseFactory create(CahcheDatabaseModule module,
      Provider<Context> contextProvider) {
    return new CahcheDatabaseModule_ProvideAppDatabaseFactory(module, contextProvider);
  }

  public static AppCacheDatabase provideAppDatabase(CahcheDatabaseModule instance,
      Context context) {
    return Preconditions.checkNotNullFromProvides(instance.provideAppDatabase(context));
  }
}
