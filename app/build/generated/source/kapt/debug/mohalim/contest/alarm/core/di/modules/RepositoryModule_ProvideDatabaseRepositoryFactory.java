// Generated by Dagger (https://dagger.dev).
package mohalim.contest.alarm.core.di.modules;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import mohalim.alarm.infocontest.core.data_source.aws.AWSDatabase;
import mohalim.contest.alarm.core.repository.DatabaseRepository;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RepositoryModule_ProvideDatabaseRepositoryFactory implements Factory<DatabaseRepository> {
  private final RepositoryModule module;

  private final Provider<AWSDatabase> dataProvider;

  public RepositoryModule_ProvideDatabaseRepositoryFactory(RepositoryModule module,
      Provider<AWSDatabase> dataProvider) {
    this.module = module;
    this.dataProvider = dataProvider;
  }

  @Override
  public DatabaseRepository get() {
    return provideDatabaseRepository(module, dataProvider.get());
  }

  public static RepositoryModule_ProvideDatabaseRepositoryFactory create(RepositoryModule module,
      Provider<AWSDatabase> dataProvider) {
    return new RepositoryModule_ProvideDatabaseRepositoryFactory(module, dataProvider);
  }

  public static DatabaseRepository provideDatabaseRepository(RepositoryModule instance,
      AWSDatabase data) {
    return Preconditions.checkNotNullFromProvides(instance.provideDatabaseRepository(data));
  }
}
